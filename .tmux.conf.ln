# tmux settings
# Requires tmux -V >= 2.6

#
# Keys
#

# Prefix = C-g, so I get back C-b to move back one character.
set -g prefix `
bind-key ` send-prefix

# Set reload key to r
bind r source-file ~/.tmux.conf

# Exit the parent process on detach
bind d detach-client -P

# prefix space selects last window (overrides next-layout)
bind Space last-window

# Switch to or launch an emacs window
bind e if-shell 'tmux select-window -t emacs' '' "new-window -n emacs emacs"

bind -n C-PgDn next-window
bind -n C-PgUp previous-window

# Kill pane
bind k killp

bind-key x command-prompt

#
# Mouse/copy mode
#
set -g mouse on

# Mouse wheel up enters copy mode
bind -n WheelUpPane if -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -e"'
bind -n M-v copy-mode -ue # M-v enters copy mode

# Once in copy-mode, mouse wheel scrolls multiple lines smoothly.
bind -Tcopy-mode WheelUpPane   send -N3 -X scroll-up
bind -Tcopy-mode WheelDownPane send -N3 -X scroll-down

# Exit copy-mode with right click or [.
bind -Tcopy-mode MouseUp3Pane send -X cancel # Right click quit copy-mode
bind -Tcopy-mode [            send -X cancel # [ quit copy-mode

# Copy text:
# prefix-[ (default): to tmux buffer
# M-w or mousedrag: to clipboard and tmux buffer.
# When in doubt w/ mouse, Shift+drag bypasses tmux and uses xterm select.

# MSYS: Windows clipboard
if-shell 'uname | grep -qi MSYS' 'bind-key -n -Tcopy-mode M-w send -X copy-pipe "cat > /dev/clipboard"'
if-shell 'uname | grep -qi MSYS' 'bind -Tcopy-mode MouseDragEnd1Pane send -X copy-pipe "cat > /dev/clipboard" \; send -X cancel'

# WSL: Windows clipboard
if-shell 'grep -q Microsoft /proc/version' 'bind-key -n -Tcopy-mode M-w send -X copy-pipe "cat | clip.exe"'
if-shell 'grep -q Microsoft /proc/version' 'bind -Tcopy-mode MouseDragEnd1Pane send -X copy-pipe "cat | clip.exe" \; send -X cancel'

# Generic Linux: fall back to an scp-able file.
if-shell 'uname -a | grep -qi "Linux .*-generic"' 'bind-key -n -Tcopy-mode M-w send -X copy-pipe "cat > $HOME/clipboard"'
if-shell 'uname -a | grep -qi "Linux .*-generic"' 'bind -Tcopy-mode MouseDragEnd1Pane send -X copy-pipe "cat > $HOME/clipboard" \; send -X cancel'

#
# Session and window settings
#

# I'm setting no colors in tmux so different terminal configurations
# can come through and look consistent regardless of tmux config.
# Be sure to TERM=putty-256color or xterm-256color via terminal
# settings outside tmux, or colors will look bad in Emacs.
set -g default-terminal "tmux-256color"

# Count sessions starting at 1
set -g base-index 1

# Title bar
set -g set-titles on
set -g set-titles-string '#(whoami)@#h' #' #(curl ipecho.net/plain;echo)'

# Cursor--assuming Cs and Cr are set in terminal-overrides, do this in the terminal:
# printf '\033[2 q' # non-blinking block, 1 q blinking block
# printf '\033[4 q' # non-blinking underline, 3 q blinking underline
# printf '\033]12;red\033\\' # cursor color. Doesn't work. I want to try colour136 dark orange

#
# Status bar
#
set -g status-style "reverse"

# Left: session name
set -g status-left "[#S] "
set -g status-left-length 15

# Right: user/host/date
set -g status-right '#(whoami)@#(hostname) [%a %d %b %R]'
set -g status-right-length 60

# Middle: Typical window index, title, and flags
set -g status-justify left
set -g window-status-current-format "#[bold,underscore]#I:#W#F"
set -g window-status-format "#I:#W#F"
set -g window-status-separator ' | '

# More time to read error messages
set -g display-time 2000
